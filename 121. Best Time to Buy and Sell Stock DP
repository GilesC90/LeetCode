// 121. Best Time to Buy and Sell Stock

// You are given an array prices where prices[i] is the 
// price of a given stock on the ith day.

// You want to maximize your profit by choosing a single day 
// to buy one stock and choosing a different day in the future 
// to sell that stock.

// Return the maximum profit you can achieve from this transaction. 
// If you cannot achieve any profit, return 0.

 

// Example 1:

// Input: prices = [7,1,5,3,6,4]
// Output: 5
// Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), 
// profit = 6-1 = 5.
// Note that buying on day 2 and selling on day 1 is not allowed because 
// you must buy before you sell.

// Example 2:

// Input: prices = [7,6,4,3,1]
// Output: 0
// Explanation: In this case, no transactions are done and the max profit = 0.
 

// Constraints:

// 1 <= prices.length <= 105
// 0 <= prices[i] <= 104

/**
 * @param {number[]} prices
 * @return {number}
 */
var maxProfit = function(prices) 
{
    // create variables that represent a buy price
    // and a possible profit.  We set the buy to infinity
    // to ensure that any value inside of the prices
    // array will be smaller than it.  We will also
    // instantiate an array to hold our would-be profit
    // information dynamically
    let buy = Infinity, arr = [], profit = 0

    for(let i = 0; i < prices.length; i++)
    {
        // our buy will be the Math.min of our current
        // buy price vs the value at the current index
        // of price
        buy = Math.min(buy, prices[i]);
        // we will push what the possible profit would be 
        // for this position's day if we were to sell the 
        // stock
        arr[i] = prices[i] - buy;
        // we compare the Math.max of our would be profit inside
        // of our array vs our current value of profit.
        profit = Math.max(profit, arr[i]);

    }
    // return our best time to sell the stock
    return profit
};
